name: –ú–∏–∫–†–æ–ë–ë–æ–∫—Å Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: '–¢–∏–ø —Ä–µ–ª–∏–∑–∞'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release and Build Firmware
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Calculate Next Version
      id: version
      run: |
        chmod +x scripts/calculate_next_version.sh
        NEXT_VERSION=$(./scripts/calculate_next_version.sh ${{ inputs.release_type }})
        echo "version=${NEXT_VERSION}" >> $GITHUB_OUTPUT
        echo "Calculated next version: ${NEXT_VERSION}"
        
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache PlatformIO
      uses: actions/cache@v4
      with:
        path: |
          ~/.platformio
          .pio
        key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-pio-
          
    - name: Install PlatformIO and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install platformio htmlmin jsmin csscompressor
        
    - name: Generate Epic Release Name
      id: epic_name
      run: |
        # –ú–∞—Å—Å–∏–≤—ã —Å—Ç–∞—Ä–æ—Å–ª–∞–≤—è–Ω—Å–∫–∏—Ö –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –∏ –≥–µ—Ä–æ–µ–≤
        ADJECTIVES=(
          "Yarostniy:–Ø—Ä–æ—Å—Ç–Ω—ã–π"
          "Mudriy:–ú—É–¥—Ä—ã–π"
          "Hrabriy:–•—Ä–∞–±—Ä—ã–π"
          "Veshchiy:–í–µ—â–∏–π"
          "Moguchiy:–ú–æ–≥—É—á–∏–π"
          "Slavniy:–°–ª–∞–≤–Ω—ã–π"
          "Grozniy:–ì—Ä–æ–∑–Ω—ã–π"
          "Bystriy:–ë—ã—Å—Ç—Ä—ã–π"
          "Svetliy:–°–≤–µ—Ç–ª—ã–π"
          "Krepkiy:–ö—Ä–µ–ø–∫–∏–π"
          "Silniy:–°–∏–ª—å–Ω—ã–π"
          "Udaloy:–£–¥–∞–ª–æ–π"
          "Otvazhniy:–û—Ç–≤–∞–∂–Ω—ã–π"
          "Verniy:–í–µ—Ä–Ω—ã–π"
          "Braviy:–ë—Ä–∞–≤—ã–π"
          "Velikiy:–í–µ–ª–∏–∫–∏–π"
          "Vechniy:–í–µ—á–Ω—ã–π"
          "Hitriy:–•–∏—Ç—Ä—ã–π"
          "Shchedriy:–©–µ–¥—Ä—ã–π"
          "Neukrotimiy:–ù–µ—É–∫—Ä–æ—Ç–∏–º—ã–π"
        )
        
        HEROES=(
          "Svyatogor:–°–≤—è—Ç–æ–≥–æ—Ä"
          "Dobrynya:–î–æ–±—Ä—ã–Ω—è"
          "Ilya:–ò–ª—å—è"
          "Boyan:–ë–æ—è–Ω"
          "Mikula:–ú–∏–∫—É–ª–∞"
          "Peresvet:–ü–µ—Ä–µ—Å–≤–µ—Ç"
          "Volkh:–í–æ–ª—Ö"
          "Stavr:–°—Ç–∞–≤—Ä"
          "Alyosha:–ê–ª—ë—à–∞"
          "Dunay:–î—É–Ω–∞–π"
          "Volga:–í–æ–ª—å–≥–∞"
          "Churilo:–ß—É—Ä–∏–ª–æ"
          "Yeruslan:–ï—Ä—É—Å–ª–∞–Ω"
          "Sadko:–°–∞–¥–∫–æ"
          "Dyuk:–î—é–∫"
          "Vladimir:–í–ª–∞–¥–∏–º–∏—Ä"
          "Koshchey:–ö–æ—â–µ–π"
          "Solovey:–°–æ–ª–æ–≤–µ–π"
          "Potyk:–ü–æ—Ç—ã–∫"
          "Buslay:–ë—É—Å–ª–∞–π"
        )
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ—Ä—Å–∏—é –∫–∞–∫ seed –¥–ª—è –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        VERSION="${{ steps.version.outputs.version }}"
        SEED=$(echo -n "$VERSION" | md5sum | cut -c1-8)
        SEED_DEC=$((16#$SEED))
        
        # –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ –∏ –≥–µ—Ä–æ—è –ø–æ seed
        ADJ_INDEX=$(($SEED_DEC % ${#ADJECTIVES[@]}))
        HERO_INDEX=$((($SEED_DEC / ${#ADJECTIVES[@]}) % ${#HEROES[@]}))
        
        ADJ_PAIR="${ADJECTIVES[$ADJ_INDEX]}"
        HERO_PAIR="${HEROES[$HERO_INDEX]}"
        
        ADJ_EN=$(echo $ADJ_PAIR | cut -d: -f1)
        ADJ_RU=$(echo $ADJ_PAIR | cut -d: -f2)
        HERO_EN=$(echo $HERO_PAIR | cut -d: -f1)
        HERO_RU=$(echo $HERO_PAIR | cut -d: -f2)
        
        EPIC_NAME_EN="${ADJ_EN} ${HERO_EN}"
        EPIC_NAME_RU="${ADJ_RU} ${HERO_RU}"
        
        echo "epic_name_en=${EPIC_NAME_EN}" >> $GITHUB_OUTPUT
        echo "epic_name_ru=${EPIC_NAME_RU}" >> $GITHUB_OUTPUT
        
        echo "üé≠ –≠–ø–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞: ${EPIC_NAME_RU} (${EPIC_NAME_EN})"
        
    - name: Create Git Tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag -a ${{ steps.version.outputs.version }} -m "Release ${{ steps.version.outputs.version }}"
        git push origin ${{ steps.version.outputs.version }}
        
    - name: Build Release Firmware
      run: |
        echo "üî® Building release firmware..."
        pio run --environment release
        
    - name: Build Debug Firmware
      run: |
        echo "üî® Building debug firmware..."
        pio run --environment debug
        
    - name: Prepare Release Files
      run: |
        VERSION=${{ steps.version.outputs.version }}
        
        # –ö–æ–ø–∏—Ä—É–µ–º –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
        cp .pio/build/release/firmware.bin microbox-${VERSION}-release.bin
        cp .pio/build/debug/firmware.bin microbox-${VERSION}-debug.bin
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã
        sha256sum microbox-${VERSION}-release.bin > microbox-${VERSION}-release.bin.sha256
        sha256sum microbox-${VERSION}-debug.bin > microbox-${VERSION}-debug.bin.sha256
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–º–µ—Ä–∞—Ö
        echo "## üì¶ –°–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:" > build-info.txt
        ls -lh microbox-*.bin | awk '{print $9 " - " $5}' >> build-info.txt
        
    - name: Generate Release Notes
      run: |
        VERSION=${{ steps.version.outputs.version }}
        EPIC_NAME_RU="${{ steps.epic_name.outputs.epic_name_ru }}"
        EPIC_NAME_EN="${{ steps.epic_name.outputs.epic_name_en }}"
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ changelog
        PREV_TAG=$(git describe --tags --abbrev=0 --match='v*' 2>/dev/null || echo "")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º changelog
        CHANGELOG=""
        if [ -n "$PREV_TAG" ]; then
          echo "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è changelog –æ—Ç $PREV_TAG –¥–æ HEAD..."
          
          # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–∏—Ç–æ–≤
          COMMIT_COUNT=$(git rev-list "${PREV_TAG}..HEAD" --no-merges --count)
          
          if [ "$COMMIT_COUNT" -gt 0 ]; then
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–º–∏—Ç—ã —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            COMMITS=$(git log --pretty=format:"- %s" "${PREV_TAG}..HEAD" --no-merges)
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            FILES_CHANGED=$(git diff --name-only "${PREV_TAG}..HEAD" | wc -l)
            
            CHANGELOG=$(cat << CHANGELOG_EOF
        
        ## üÜï –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏
        
        **–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –≤–µ—Ä—Å–∏–∏ ${PREV_TAG}** (${COMMIT_COUNT} –∫–æ–º–º–∏—Ç–æ–≤, –∏–∑–º–µ–Ω–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${FILES_CHANGED})
        
        ### –ò–∑–º–µ–Ω–µ–Ω–∏—è:
        
        ${COMMITS}
        
        CHANGELOG_EOF
        )
          else
            CHANGELOG=$(cat << CHANGELOG_EOF
        
        ## üÜï –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏
        
        –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ä–µ–ª–∏–∑ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ–¥–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ ${PREV_TAG}.
        
        CHANGELOG_EOF
        )
          fi
        else
          echo "‚ö†Ô∏è  –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–µ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω - —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑"
          CHANGELOG=$(cat << CHANGELOG_EOF
        
        ## üÜï –ß—Ç–æ –Ω–æ–≤–æ–≥–æ –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏
        
        üéâ **–ü–µ—Ä–≤—ã–π —Ä–µ–ª–∏–∑ –ú–∏–∫—Ä–æ–ë–ë–æ–∫—Å!**
        
        –í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–∏–Ω–∏–∞—Ç—é—Ä–Ω–æ–≥–æ —Ä–æ–±–æ—Ç–∞ –Ω–∞ ESP32CAM —Å –≤–µ–±-—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º.
        
        CHANGELOG_EOF
        )
        fi
        
        cat > RELEASE_NOTES.md << 'EOFMARKER'
        # –ú–∏–∫–†–æ–ë–ë–æ–∫—Å $VERSION ‚Äî $EPIC_NAME_RU
        
        > **"$EPIC_NAME_EN"** ‚Äî Epic codename for this release
        
        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–ª–∏–∑ –ú–∏–∫–†–æ–ë–ë–æ–∫—Å - –º–∏–Ω–∏–∞—Ç—é—Ä–Ω–æ–≥–æ —Ä–æ–±–æ—Ç–∞ –Ω–∞ ESP32CAM.
        
        $CHANGELOG_PLACEHOLDER
        
        ## üì¶ –§–∞–π–ª—ã –ø—Ä–æ—à–∏–≤–∫–∏
        
        - **microbox-$VERSION-release.bin** - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ—à–∏–≤–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        - **microbox-$VERSION-debug.bin** - –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        
        ## üöÄ –ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
        
        ### –ú–µ—Ç–æ–¥ 1: –ß–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (OTA Update)
        
        1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Ä–æ–±–æ—Ç—É —á–µ—Ä–µ–∑ WiFi:
           - SSID: `–ú–∏–∫–†–æ–ë–ë–æ–∫—Å`
           - –ü–∞—Ä–æ–ª—å: `12345678`
        2. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞:
           - `http://192.168.4.1` (–≤ —Ä–µ–∂–∏–º–µ —Ç–æ—á–∫–∏ –¥–æ—Å—Ç—É–ø–∞)
           - –∏–ª–∏ `http://{6mac}.microbbox.local` (–≥–¥–µ {6mac} - –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 —Å–∏–º–≤–æ–ª–æ–≤ MAC, –Ω–∞–ø—Ä–∏–º–µ—Ä: a1b2c3.microbbox.local)
        3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É **üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ**
        4. –í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª `.bin`
        5. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        
        > **–°–æ–≤–µ—Ç**: –í –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ WiFi –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–∞—à–µ–π –¥–æ–º–∞—à–Ω–µ–π —Å–µ—Ç–∏!
        
        ### –ú–µ—Ç–æ–¥ 2: –ß–µ—Ä–µ–∑ USB (esptool)
        
        ```bash
        # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ esptool
        pip install esptool
        
        # –ü–æ–¥–∫–ª—é—á–∏—Ç–µ ESP32CAM –∫ –∫–æ–º–ø—å—é—Ç–µ—Ä—É —á–µ—Ä–µ–∑ USB-UART
        # –ó–∞–º–µ–Ω–∏—Ç–µ COM3 –Ω–∞ –≤–∞—à –ø–æ—Ä—Ç (–¥–ª—è Linux/Mac: /dev/ttyUSB0)
        esptool.py --chip esp32 --port COM3 --baud 921600 \
          write_flash -z 0x10000 microbox-$VERSION-release.bin
        ```
        
        ### –ú–µ—Ç–æ–¥ 3: –ß–µ—Ä–µ–∑ PlatformIO
        
        ```bash
        # –ö–ª–æ–Ω–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        git clone https://github.com/GOODWORKRINKZ/microbbox.git
        cd microbbox
        
        # –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ –Ω—É–∂–Ω—É—é –≤–µ—Ä—Å–∏—é
        git checkout $VERSION
        
        # –°–æ–±–µ—Ä–∏—Ç–µ –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ
        pio run --environment release --target upload
        ```
        
        ## ‚ú® –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
        
        - üì± **–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ –ü–ö, –º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ VR-—à–ª–µ–º—ã
        - üéÆ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ**:
          - –° –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (WASD/—Å—Ç—Ä–µ–ª–∫–∏)
          - –í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º–∏ —Å—Ç–∏–∫–∞–º–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
          - –ì–µ–π–º–ø–∞–¥–æ–º
          - –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞–º–∏ VR (Oculus Quest)
        - üìπ **–í–∏–¥–µ–æ—Å—Ç—Ä–∏–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏** —Å –∫–∞–º–µ—Ä—ã ESP32CAM
        - üí° **3 –∞–¥—Ä–µ—Å–Ω—ã—Ö —Å–≤–µ—Ç–æ–¥–∏–æ–¥–∞** WS2812B —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
        - üîä **–ë—É–∑–µ—Ä** –¥–ª—è –∑–≤—É–∫–æ–≤—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        - üöî **–†–µ–∂–∏–º—ã —ç—Ñ—Ñ–µ–∫—Ç–æ–≤**:
          - –ü–æ–ª–∏—Ü–∏—è (–∫—Ä–∞—Å–Ω–æ-—Å–∏–Ω–∏–µ –º–∏–≥–∞–ª–∫–∏ + —Å–∏—Ä–µ–Ω–∞)
          - –ü–æ–∂–∞—Ä–Ω—ã–µ (–∫—Ä–∞—Å–Ω–æ-–æ—Ä–∞–Ω–∂–µ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã)
          - –°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å (–±–µ–ª–æ-–∫—Ä–∞—Å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã)
          - –û–±—ã—á–Ω—ã–π (–∞–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è)
        - üîÑ **OTA –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è** –ø—Ä—è–º–æ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        - ‚öôÔ∏è **–î–≤–∞ —Ä–µ–∂–∏–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è**:
          - –¢–∞–Ω–∫–æ–≤—ã–π (–ª–µ–≤—ã–π/–ø—Ä–∞–≤—ã–π —Å—Ç–∏–∫ = –ª–µ–≤–∞—è/–ø—Ä–∞–≤–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)
          - –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π (–ø—Ä–∞–≤—ã–π = —Å–∫–æ—Ä–æ—Å—Ç—å, –ª–µ–≤—ã–π = –ø–æ–≤–æ—Ä–æ—Ç)
        - üì° **WiFi –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è**:
          - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ WiFi —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
          - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏ Client –∏ AP
          - mDNS –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (–¥–æ—Å—Ç—É–ø –ø–æ –∏–º–µ–Ω–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: a1b2c3.microbbox.local)
          - –•—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ —ç–Ω–µ—Ä–≥–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–π –ø–∞–º—è—Ç–∏
        
        ## üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        
        - **–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä**: ESP32 @ 240MHz
        - **–ü–∞–º—è—Ç—å**: 320KB RAM, 4MB Flash
        - **–ö–∞–º–µ—Ä–∞**: OV2640
        - **WiFi**: 2.4GHz (—Ä–µ–∂–∏–º—ã AP/STA)
        - **–ú–æ—Ç–æ—Ä—ã**: 2x —Å –¥—Ä–∞–π–≤–µ—Ä–æ–º MX1508
        - **–°–≤–µ—Ç–æ–¥–∏–æ–¥—ã**: 3x WS2812B (2 —Å–∑–∞–¥–∏, 1 —Å–ø–µ—Ä–µ–¥–∏)
        - **–ë—É–∑–µ—Ä**: –ê–∫—Ç–∏–≤–Ω—ã–π –±—É–∑–µ—Ä –Ω–∞ –ø–∏–Ω–µ 16
        
        ## üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
        
        –ü–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Å—É–º–º—ã:
        
        ```bash
        # –î–ª—è release –≤–µ—Ä—Å–∏–∏
        sha256sum -c microbox-$VERSION-release.bin.sha256
        
        # –î–ª—è debug –≤–µ—Ä—Å–∏–∏
        sha256sum -c microbox-$VERSION-debug.bin.sha256
        ```
        
        ## üêõ –ò–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
        
        - –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã WiFi
        - –í —Ä–µ–∂–∏–º–µ VR —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –±—Ä–∞—É–∑–µ—Ä —Å WebXR API
        
        ## üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
        
        –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ [README.md](https://github.com/GOODWORKRINKZ/microbbox/blob/main/README.md)
        
        ## üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞
        
        –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:
        - –°–æ–∑–¥–∞–π—Ç–µ [Issue](https://github.com/GOODWORKRINKZ/microbbox/issues)
        - –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ [Wiki](https://github.com/GOODWORKRINKZ/microbbox/wiki)
        
        ---
        
        EOFMARKER
        
        # –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞
        echo "" >> RELEASE_NOTES.md
        echo "**–î–∞—Ç–∞ —Å–±–æ—Ä–∫–∏**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> RELEASE_NOTES.md
        echo "**Git commit**: $(git rev-parse --short HEAD)" >> RELEASE_NOTES.md
        
        # –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        sed -i "s/\$VERSION/${VERSION}/g" RELEASE_NOTES.md
        sed -i "s/\$EPIC_NAME_RU/${EPIC_NAME_RU}/g" RELEASE_NOTES.md
        sed -i "s/\$EPIC_NAME_EN/${EPIC_NAME_EN}/g" RELEASE_NOTES.md
        
        # –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º changelog (–∏—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è)
        export CHANGELOG_CONTENT="$CHANGELOG"
        perl -i -pe 's/\$CHANGELOG_PLACEHOLDER/$ENV{CHANGELOG_CONTENT}/e' RELEASE_NOTES.md
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: –ú–∏–∫–†–æ–ë–ë–æ–∫—Å ${{ steps.version.outputs.version }} ‚Äî ${{ steps.epic_name.outputs.epic_name_ru }}
        body_path: RELEASE_NOTES.md
        files: |
          microbox-*.bin
          microbox-*.sha256
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build Summary
      run: |
        echo "## ‚úÖ –†–µ–ª–∏–∑ ${{ steps.version.outputs.version }} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üé≠ –≠–ø–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**${{ steps.epic_name.outputs.epic_name_ru }}** (${{ steps.epic_name.outputs.epic_name_en }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üì¶ –§–∞–π–ª—ã:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        ls -lh microbox-*.bin | awk '{print "- **" $9 "** - " $5}' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üîó –°—Å—ã–ª–∫–∏:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- [–†–µ–ª–∏–∑ –Ω–∞ GitHub](https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.version }})" >> $GITHUB_STEP_SUMMARY
        echo "- [–í—Å–µ —Ä–µ–ª–∏–∑—ã](https://github.com/${{ github.repository }}/releases)" >> $GITHUB_STEP_SUMMARY
